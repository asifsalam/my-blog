{
	"Symbolic AI": {
		"techniques": [
			{
				"name": "Logic Programming",
				"description": "Encodes knowledge and inferences using formal logic."
			},
			{
				"name": "Expert Systems",
				"description": "Rule-based systems that mimic domain-specific human expertise."
			},
			{
				"name": "Ontologies",
				"description": "Organizes knowledge hierarchically with defined relationships (e.g., taxonomies)."
			},
			{
				"name": "Semantic Networks",
				"description": "Represents knowledge as nodes (concepts) and edges (relationships)."
			},
			{
				"name": "Production Systems",
				"description": "Uses \"if-then\" rules to derive actions from conditions."
			}
		],
		"algorithms": [
			{
				"name": "A* Search",
				"description": "An optimization algorithm for graph traversal, using heuristics to guide the search."
			},
			{
				"name": "Depth-first / Best-first Search",
				"description": "Algorithms for systematically traversing or searching through tree or graph data structures, each employing a distinct strategy to explore nodes."
			},
			{
				"name": "Backward Chaining",
				"description": "Goal-driven reasoning that traces backward through logical rules."
			},
			{
				"name": "Forward Chaining",
				"description": "Data-driven reasoning that applies rules to derive conclusions."
			},
			{
				"name": "Resolution Theorem Proving",
				"description": "Deduces new clauses by resolving contradictions in logic."
			},
			{
				"name": "Constraint Satisfaction Algorithms",
				"description": "Problem-solving methods that look for solutions meeting all specified constraints within a given problem space."
			},
			{
				"name": "Minimax Algorithm",
				"description": "Decision-making for adversarial games by minimizing loss and maximizing gain."
			}
		]
	},
	"Connectionist AI": {
		"techniques": [
			{
				"name": "Artificial Neural Networks (ANNs)",
				"description": "Interconnected layers of nodes that learn hierarchical features."
			},
			{
				"name": "Deep Learning",
				"description": "Neural networks with multiple layers, typically with non-linear activation functions."
			},
			{
				"name": "Convolutional Neural Networks (CNNs)",
				"description": "Processes grid-like data (e.g., images) with convolutional layers."
			},
			{
				"name": "Recurrent Neural Networks (RNNs)",
				"description": "Handles sequential data via feedback loops."
			},
			{
				"name": "Generative adversarial Networks (GANs)",
				"description": "Neural networks that compete, a generator and a discriminator, iteratively refining generated data to match real data distributions."
			},
			{
				"name": "Variatioinal Autoencoders (VAEs)",
				"description": "Learn probabilistic latent representations of data, enabling generation by sampling and decoding from the latent space."
			},
			{
				"name": "Transformers",
				"description": "Uses self-attention mechanisms for parallelized sequence processing."
			},
			{
				"name": "Supervised and Unsupervised Learning",
				"description": "Uses labeled data to train models and discover hidden patterns in unlabeled data."
			}
		],
		"algorithms": [
			{
				"name": "Backpropagation",
				"description": "Adjusts network weights by propagating errors backward."
			},
			{
				"name": "Stochastic Gradient Descent (SGD)",
				"description": "Optimizes models by iteratively updating parameters."
			},
			{
				"name": "Dropout",
				"description": "Regularization technique to prevent overfitting by randomly deactivating neurons."
			},
			{
				"name": "Adam Optimizer",
				"description": "Adaptive learning-rate algorithm combining RMSprop and momentum."
			},
			{
				"name": "Attention Mechanism",
				"description": "Enables models to focus on relevant parts of the input."
			}
		]
	},
	"Other techniques": {
		"techniques": [
			{
				"name": "Probability Theory",
				"description": "The broad foundational mathematical tools used in machine learning to model uncertainty and analyze data distributions."
			},
			{
				"name": "Statistical Inference",
				"description": "Using sample data to estimate population parameters and make predictions."
			},
			{
				"name": "Markov Models",
				"description": "Models that assume the future state depends only on the current state, ignoring previous events. This is for creating stochastic models of dynamic systems as state changes."
			},
			{
				"name": "Bayesian Networks",
				"description": "Graphical models that represent probabilistic relationships among variables, enabling inference under uncertainty."
			},
			{
				"name": "Evolutionary Algorithms",
				"description": "Optimization techniques inspired by natural selection, iteratively evolving solutions to improve performance on a given task."
			},
			{
				"name": "Reinforcement Learning",
				"description": "A learning paradigm where an agent interacts with an environment, receiving rewards or penalties to guide its actions."
			},
			{
				"name": "Supervised Learning",
				"description": "A training approach using labeled data to teach models how to predict outputs for new, unseen inputs."
			},
			{
				"name": "Unsupervised Learning",
				"description": "A training approach that discovers hidden patterns or structures in unlabeled data without predefined output labels."
			}
		],
		"algorithms": [
			{
				"name": "Q-Learning",
				"description": "A way for a computer to learn the best actions through trial and error, without needing a detailed model of its surroundings."
			},
			{
				"name": "Policy Gradient Methods",
				"description": "Approaches that teach a computer to pick actions by directly adjusting how it decides, aiming to maximize rewards."
			},
			{
				"name": "Expectation Maximization Algorithm",
				"description": "A process to refine guesses about hidden parts of a problem so they best match the data."
			},
			{
				"name": "Belief Propagation",
				"description": "A method for updating how likely different possibilities are in a network of related ideas or events."
			},
			{
				"name": "Hidden Markov Model",
				"description": "A way to describe something that changes over time, even when parts of it can't be directly seen."
			},
			{
				"name": "Hypothesis Test",
				"description": "A procedure to decide if observed data strongly supports or contradicts an initial idea."
			},
			{
				"name": "Genetic Programming",
				"description": "A technique that uses “survival of the fittest” to automatically evolve computer programs to solve problems."
			},
			{
				"name": "K-means Clustering",
				"description": "Groups data points into a chosen number of clusters by finding the best “centers” for each group."
			},
			{
				"name": "Hierarchical Clustering",
				"description": "Organizes data into groups step by step, either by combining smaller groups or splitting larger ones."
			},
			{
				"name": "Principal Component Analysis",
				"description": "Identifies the main patterns in data to retain only the most important information."
			},
			{
				"name": "Linear Regression",
				"description": "Predicts a number (like a price) based on how it changes with other factors."
			},
			{
				"name": "Logistic Regression",
				"description": "Predicts yes-or-no outcomes by calculating probabilities from given inputs."
			},
			{
				"name": "Support Vector Machines",
				"description": "Searches for the best boundary to separate data into distinct categories."
			},
			{
				"name": "Random Forest",
				"description": "A collection of decision trees that work together for more accurate predictions."
			}
		]
	}
}
